version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: air-quality-mongodb-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-air_quality_db}
    volumes:
      - mongodb_data_dev:/data/db
      - ./backend/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - air-quality-network-dev

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: air-quality-backend-dev
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/air_quality_db?authSource=admin
      JWT_SECRET: dev_jwt_secret_key
      JWT_EXPIRES_IN: 7d
      API_RATE_LIMIT: 1000
      CORS_ORIGIN: http://localhost:3000
    depends_on:
      - mongodb
    networks:
      - air-quality-network-dev
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  # Frontend React App (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: air-quality-frontend-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      NODE_ENV: development
    depends_on:
      - backend
    networks:
      - air-quality-network-dev
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  mongodb_data_dev:
    driver: local

networks:
  air-quality-network-dev:
    driver: bridge
